// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSON Schema test suite additionalProperties.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    for (var v2 in v0) {
      var v3 = v0[v2];
      var v4 = false;
      if (v2 === \\"foo\\") {
        v4 = true;
      }
      if (v2 === \\"bar\\") {
        v4 = true;
      }
      if (v2.match(/^v/)) {
        v4 = true;
      }
      if (v4 === false) {
        v1.push(true);
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite additionalProperties.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    for (var v2 in v0) {
      var v3 = v0[v2];
      var v4 = false;
      if (v2 === \\"foo\\") {
        v4 = true;
      }
      if (v2 === \\"bar\\") {
        v4 = true;
      }
      if (v4 === false) {
        if (!(typeof v3 === 'boolean')) {
          v1.push(true);
        }
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite additionalProperties.json matches snapshot 3`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    for (var v2 in v0) {
      var v3 = v0[v2];
      if (!(typeof v3 === 'boolean')) {
        v1.push(true);
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite additionalProperties.json matches snapshot 4`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.foo;
    if (v2 !== undefined) {
    }
    var v3 = v0.bar;
    if (v3 !== undefined) {
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite allOf.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.bar;
    if (v2 !== undefined) {
      if (!(typeof v2 === 'number' && v2 % 1 === 0)) {
        v1.push(true);
      }
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (v0.bar === undefined) {
      v1.push(true);
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v3 = v0.foo;
    if (v3 !== undefined) {
      if (!(typeof v3 === 'string')) {
        v1.push(true);
      }
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (v0.foo === undefined) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite allOf.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.foo;
    if (v2 !== undefined) {
      if (!(typeof v2 === 'string')) {
        v1.push(true);
      }
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (v0.foo === undefined) {
      v1.push(true);
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v3 = v0.baz;
    if (v3 !== undefined) {
      if (!(v3 === null)) {
        v1.push(true);
      }
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (v0.baz === undefined) {
      v1.push(true);
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v4 = v0.bar;
    if (v4 !== undefined) {
      if (!(typeof v4 === 'number' && v4 % 1 === 0)) {
        v1.push(true);
      }
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (v0.bar === undefined) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite allOf.json matches snapshot 3`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'number') {
    if (v0 > 30) {
      v1.push(true);
    }
  }
  if (typeof v0 === 'number') {
    if (v0 < 20) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite anyOf.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  var v2 = 0;
  var v3;
  v3 = false;
  if (!(typeof v0 === 'number' && v0 % 1 === 0)) {
    v3 = true;
  }
  v3 && v2++;
  v3 = false;
  if (typeof v0 === 'number') {
    if (v0 < 2) {
      v3 = true;
    }
  }
  v3 && v2++;
  if (v2 === 2) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite anyOf.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  var v2 = 0;
  var v3;
  v3 = false;
  if (typeof v0 === 'string') {
    if (v0.length > 2) {
      v3 = true;
    }
  }
  v3 && v2++;
  v3 = false;
  if (typeof v0 === 'string') {
    if (v0.length < 4) {
      v3 = true;
    }
  }
  v3 && v2++;
  if (v2 === 2) {
    v1.push(true);
  }
  if (!(typeof v0 === 'string')) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite default.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.foo;
    if (v2 !== undefined) {
      if (!(typeof v2 === 'number' && v2 % 1 === 0)) {
        v1.push(true);
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite default.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.bar;
    if (v2 !== undefined) {
      if (typeof v2 === 'string') {
        if (v2.length < 4) {
          v1.push(true);
        }
      }
      if (!(typeof v2 === 'string')) {
        v1.push(true);
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite enum.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  var v2 = 0;
  if (v0 === 1) {
    v2++;
  }
  if (v0 === 2) {
    v2++;
  }
  if (v0 === 3) {
    v2++;
  }
  if (v2 === 0) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite enum.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  var v2 = 0;
  if (v0 === 6) {
    v2++;
  }
  if (v0 === \\"foo\\") {
    v2++;
  }
  if (JSON.stringify(v0) === '[]') {
    v2++;
  }
  if (v0 === true) {
    v2++;
  }
  if (JSON.stringify(v0) === '{\\"foo\\":12}') {
    v2++;
  }
  if (v2 === 0) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite enum.json matches snapshot 3`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.foo;
    if (v2 !== undefined) {
      var v3 = 0;
      if (v2 === \\"foo\\") {
        v3++;
      }
      if (v3 === 0) {
        v1.push(true);
      }
    }
    var v4 = v0.bar;
    if (v4 !== undefined) {
      var v5 = 0;
      if (v4 === \\"bar\\") {
        v5++;
      }
      if (v5 === 0) {
        v1.push(true);
      }
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (v0.bar === undefined) {
      v1.push(true);
    }
  }
  if (!(v0 && typeof v0 === 'object' && !Array.isArray(v0))) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite items.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (Array.isArray(v0)) {
    var v2 = 0;
    for (; v2 < v0.length; v2++) {
    if (!(typeof v0[v2] === 'number' && v0[v2] % 1 === 0)) {
      v1.push(true);
    }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite items.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  var v2 = v0[0];
  if (v2 !== undefined) {
    if (!(typeof v2 === 'number' && v2 % 1 === 0)) {
      v1.push(true);
    }
  }
  var v3 = v0[1];
  if (v3 !== undefined) {
    if (!(typeof v3 === 'string')) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite maxItems.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (Array.isArray(v0)) {
    if (v0.length > 2) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite maxLength.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'string') {
    if (v0.length > 2) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite maxProperties.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (Object.keys(v0).length > 2) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite maximum.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'number') {
    if (v0 > 3) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite maximum.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'number') {
    if (v0 >= 3) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite minItems.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (Array.isArray(v0)) {
    if (v0.length < 1) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite minLength.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'string') {
    if (v0.length < 2) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite minProperties.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (Object.keys(v0).length < 1) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite minimum.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'number') {
    if (v0 < 1.1) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite minimum.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'number') {
    if (v0 <= 1.1) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite not.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  var v2 = false;
  if (!(typeof v0 === 'number' && v0 % 1 === 0)) {
    v2 = true;
  }
  if (!v2) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite not.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  var v2 = false;
  if (!((typeof v0 === 'number' && v0 % 1 === 0) || (typeof v0 === 'boolean'))) {
    v2 = true;
  }
  if (!v2) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite not.json matches snapshot 3`] = `
"function(v0) {
  var v1 = [];
  var v2 = false;
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v3 = v0.foo;
    if (v3 !== undefined) {
      if (!(typeof v3 === 'string')) {
        v2 = true;
      }
    }
  }
  if (!(v0 && typeof v0 === 'object' && !Array.isArray(v0))) {
    v2 = true;
  }
  if (!v2) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite not.json matches snapshot 4`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.foo;
    if (v2 !== undefined) {
      var v3 = false;
      if (!v3) {
        v1.push(true);
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite oneOf.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  var v2 = 0;
  var v3;
  v3 = false;
  if (!(typeof v0 === 'number' && v0 % 1 === 0)) {
    v3 = true;
  }
  v3 && v2++;
  v3 = false;
  if (typeof v0 === 'number') {
    if (v0 < 2) {
      v3 = true;
    }
  }
  v3 && v2++;
  if (v2 !== 2 - 1) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite oneOf.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  var v2 = 0;
  var v3;
  v3 = false;
  if (typeof v0 === 'string') {
    if (v0.length < 2) {
      v3 = true;
    }
  }
  v3 && v2++;
  v3 = false;
  if (typeof v0 === 'string') {
    if (v0.length > 4) {
      v3 = true;
    }
  }
  v3 && v2++;
  if (v2 !== 2 - 1) {
    v1.push(true);
  }
  if (!(typeof v0 === 'string')) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite pattern.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'string') {
    if (!v0.match(/^a*$/)) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite pattern.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (typeof v0 === 'string') {
    if (!v0.match(/a+/)) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite patternProperties.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    for (var v2 in v0) {
      var v3 = v0[v2];
      if (v2.match(/f.*o/)) {
        if (!(typeof v3 === 'number' && v3 % 1 === 0)) {
          v1.push(true);
        }
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite patternProperties.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    for (var v2 in v0) {
      var v3 = v0[v2];
      if (v2.match(/a*/)) {
        if (!(typeof v3 === 'number' && v3 % 1 === 0)) {
          v1.push(true);
        }
      }
      if (v2.match(/aaa*/)) {
        if (typeof v3 === 'number') {
          if (v3 > 20) {
            v1.push(true);
          }
        }
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite patternProperties.json matches snapshot 3`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    for (var v2 in v0) {
      var v3 = v0[v2];
      if (v2.match(/[0-9]{2,}/)) {
        if (!(typeof v3 === 'boolean')) {
          v1.push(true);
        }
      }
      if (v2.match(/X_/)) {
        if (!(typeof v3 === 'string')) {
          v1.push(true);
        }
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite properties.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.foo;
    if (v2 !== undefined) {
      if (!(typeof v2 === 'number' && v2 % 1 === 0)) {
        v1.push(true);
      }
    }
    var v3 = v0.bar;
    if (v3 !== undefined) {
      if (!(typeof v3 === 'string')) {
        v1.push(true);
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite properties.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    for (var v2 in v0) {
      var v3 = v0[v2];
      var v4 = false;
      if (v2 === \\"foo\\") {
        if (Array.isArray(v3)) {
          if (v3.length > 3) {
            v1.push(true);
          }
        }
        if (!(Array.isArray(v3))) {
          v1.push(true);
        }
        v4 = true;
      }
      if (v2 === \\"bar\\") {
        if (!(Array.isArray(v3))) {
          v1.push(true);
        }
        v4 = true;
      }
      if (v2.match(/f.o/)) {
        if (Array.isArray(v3)) {
          if (v3.length < 2) {
            v1.push(true);
          }
        }
        v4 = true;
      }
      if (v4 === false) {
        if (!(typeof v3 === 'number' && v3 % 1 === 0)) {
          v1.push(true);
        }
      }
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite required.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.foo;
    if (v2 !== undefined) {
    }
    var v3 = v0.bar;
    if (v3 !== undefined) {
    }
  }
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    if (v0.foo === undefined) {
      v1.push(true);
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite required.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
    var v2 = v0.foo;
    if (v2 !== undefined) {
    }
  }
  return v1;
}"
`;

exports[`JSON Schema test suite type.json matches snapshot 1`] = `
"function(v0) {
  var v1 = [];
  if (!(typeof v0 === 'number' && v0 % 1 === 0)) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite type.json matches snapshot 2`] = `
"function(v0) {
  var v1 = [];
  if (!(typeof v0 === 'number')) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite type.json matches snapshot 3`] = `
"function(v0) {
  var v1 = [];
  if (!(typeof v0 === 'string')) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite type.json matches snapshot 4`] = `
"function(v0) {
  var v1 = [];
  if (!(v0 && typeof v0 === 'object' && !Array.isArray(v0))) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite type.json matches snapshot 5`] = `
"function(v0) {
  var v1 = [];
  if (!(Array.isArray(v0))) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite type.json matches snapshot 6`] = `
"function(v0) {
  var v1 = [];
  if (!(typeof v0 === 'boolean')) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite type.json matches snapshot 7`] = `
"function(v0) {
  var v1 = [];
  if (!(v0 === null)) {
    v1.push(true);
  }
  return v1;
}"
`;

exports[`JSON Schema test suite type.json matches snapshot 8`] = `
"function(v0) {
  var v1 = [];
  if (!((typeof v0 === 'number' && v0 % 1 === 0) || (typeof v0 === 'string'))) {
    v1.push(true);
  }
  return v1;
}"
`;
